{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Furkan\\\\Desktop\\\\FrontEnd Mentor\\\\kusys-demo\\\\client\\\\src\\\\components\\\\admin\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ListStudents from \"./ListStudents\";\nimport ListCourses from \"./ListCourses\";\nimport Spinner from \"../global/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [showPage, setShowPage] = useState(\"students\");\n  const handleList = e => {\n    setShowPage(e.target.innerText.toLowerCase());\n  };\n  const [students, setStudents] = useState(null);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n\n  //This will get all the students from database.\n\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/students`);\n      const json = await response.json();\n      if (response.status === 200) {\n        setStudents(json);\n        setIsDataFetched(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(students);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page-container container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleList(e),\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleList(e),\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-page-list\",\n      children: isDataFetched ? showPage === \"students\" ? /*#__PURE__*/_jsxDEV(ListStudents, {\n        students: students,\n        setStudents: setStudents,\n        getStudents: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ListCourses, {\n        students: students\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"/h1EPJhm/WpXrjcoLlkari6VtAk=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","ListStudents","ListCourses","Spinner","jsxDEV","_jsxDEV","AdminPage","_s","showPage","setShowPage","handleList","e","target","innerText","toLowerCase","students","setStudents","isDataFetched","setIsDataFetched","getData","response","fetch","json","status","error","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","getStudents","_c","$RefreshReg$"],"sources":["C:/Users/Furkan/Desktop/FrontEnd Mentor/kusys-demo/client/src/components/admin/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ListStudents from \"./ListStudents\";\r\nimport ListCourses from \"./ListCourses\";\r\nimport Spinner from \"../global/Spinner\";\r\n\r\nconst AdminPage = () => {\r\n  const [showPage, setShowPage] = useState(\"students\");\r\n\r\n  const handleList = (e) => {\r\n    setShowPage(e.target.innerText.toLowerCase());\r\n  };\r\n\r\n  const [students, setStudents] = useState(null);\r\n  const [isDataFetched, setIsDataFetched] = useState(false);\r\n\r\n  //This will get all the students from database.\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/students`);\r\n      const json = await response.json();\r\n      if (response.status === 200) {\r\n        setStudents(json);\r\n        setIsDataFetched(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  console.log(students);\r\n  return (\r\n    <div className=\"admin-page-container container\">\r\n      <div className=\"row\">\r\n        <button onClick={(e) => handleList(e)}>Students</button>\r\n        <button onClick={(e) => handleList(e)}>Courses</button>\r\n      </div>\r\n      <div className=\"admin-page-list\">\r\n        {isDataFetched ? (\r\n          showPage === \"students\" ? (\r\n            <ListStudents students={students} setStudents={setStudents} getStudents={getData} />\r\n          ) : (\r\n            <ListCourses students={students} />\r\n          )\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}